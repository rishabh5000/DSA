/////////////////////////////////////////////////////////////////////////
                          Binary search
/////////////////////////////////////////////////////////////////////////

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int BS(vector<int>& arr, int low, int high, int key){
    int mid = (low + high) / 2;
    if(low>high) return 0;
    if(arr[mid] > key){
        return BS(arr, low, mid-1, key);
    } else if(arr[mid] < key){
        return BS(arr, mid+1, high, key);
    } else{
        return 1;
    }
}

int main()
{
    vector<int> arr(8);
    int n = arr.size();
    
    for(int i=0; i<n; i++){
        arr[i] = i;
    }
    
    if(BS(arr, 0, n-1, 9)) cout<<"Found";
    else cout<<"NOT FOUND";
    
    return 0;
}


/////////////////////////////////////////////////////////////////////////
                          Selection Sort
/////////////////////////////////////////////////////////////////////////

// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
    int arr[5] = {7,1,4,9,8};
    int n=5;

    for(int i=0; i<n-1; i++){
        int min = i;
        for(int j=i+1; j<n; j++){
            if(arr[j] < arr[min]){
                min = j;
            }
        }
        swap(arr[i], arr[min]);
    }
    
    for(int i=0; i<n; i++){
        cout<<arr[i]<<" "<<endl;
    }
    
    return 0;
}

/////////////////////////////////////////////////////////////////////////
                          Bubble Sort
/////////////////////////////////////////////////////////////////////////

// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
    int arr[5] = {7,1,4,9,8};
    int n=5;
    
    for(int i=0; i<n-1; i++){
        for(int j=0; j<n-1; j++){
            if(arr[j+1]<arr[j]){
                swap(arr[j], arr[j+1]);
            }
        }
    }
    
    for(int i=0; i<n; i++){
        cout<<arr[i]<<" "<<endl;
    }
    
    return 0;
}

/////////////////////////////////////////////////////////////////////////
                          Insertion Sort
/////////////////////////////////////////////////////////////////////////

// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
    int arr[5] = {7,1,4,9,8};
    int n=5;

    for(int i=0; i<n; i++){
        int j = i;
        while(j>0 and arr[j-1] > arr[j]){
            swap(arr[j-1], arr[j]);
            j--;
        }
    }    

    for(int i=0; i<n; i++){
        cout<<arr[i]<<" "<<endl;
    }
    
    return 0;
}

/////////////////////////////////////////////////////////////////////////
                          Merge Sort
/////////////////////////////////////////////////////////////////////////

class Solution {
public:

    void merge(vector<int> &arr, int low, int mid, int high){
        vector<int> temp;

        int left = low;
        int right = mid+1;

        while(left <= mid and right<=high){
            if(arr[left] <= arr[right]){
                temp.push_back(arr[left]);
                left++;
            }
            else{
                temp.push_back(arr[right]);
                right++;
            }
        }   

        while(left<=mid){
            temp.push_back(arr[left]);
            left++;
        }
        while(right<=high){
            temp.push_back(arr[right]);
            right++;
        }

        for (int i = low; i <= high; i++) {
            arr[i] = temp[i - low];
        }
    }


    void MS(vector<int> &arr, int low, int high){
        if(low==high) return;
        int mid = (low + high) / 2;
        MS(arr, low, mid);
        MS(arr, mid+1, high);
        merge(arr, low, mid, high);
    }

    vector<int> mergeSort(vector<int>& nums) {
        MS(nums, 0, nums.size()-1);
        return nums;
    }
};

/////////////////////////////////////////////////////////////////////////
                          Quick Sort
/////////////////////////////////////////////////////////////////////////


